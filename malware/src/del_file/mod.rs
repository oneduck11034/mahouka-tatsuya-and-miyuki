use std::error::Error;
use std::fs;
use std::io;

struct Path {
    target_path: String,
}
impl Path {
    fn new() -> Self {
        Path {
            target_path: String::new(),
        }
    }
    fn set_path(mut self, path: &str) -> Self {
        self.target_path = path.to_string();

        self
    }
}

struct Nested {}
impl Nested {
    fn delete_file(path: Path) -> io::Result<()> {
        fs::remove_file(path.target_path)?;
        println!("File deleted successfully");
        Ok(())
    }
}

pub fn init_delete_file(path_str: &str) {
    let path = Path::new().set_path(path_str);

    match Nested::delete_file(path) {
        Ok(_) => println!("Operation completed."),
        Err(e) => eprintln!("Error deleting file: {}", e),
    }
}
